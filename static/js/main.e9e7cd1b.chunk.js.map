{"version":3,"sources":["components/vectors/power_by_iovlabs.svg","components/vectors/logo.svg","adapters.js","components/Login/index.js","transformers.js","components/Requests/Row.js","components/Requests/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","backOfficeUrl","Login","login","useState","username","setUser","password","setPass","authError","setAuthError","auth","className","onSubmit","e","preventDefault","axios","post","then","res","status","data","toString","catch","error","message","htmlFor","type","id","onChange","target","value","disabled","src","poweredByIOV","alt","logo","transformDID","did","slice","Row","request","grantCredential","denyCredential","showDetails","setShowDetails","from","name","isValid","onClick","sdr","map","claim","colSpan","claimType","claimValue","Requests","setError","requests","setRequests","console","log","handleCatch","getMessagesSince","useCallback","get","putActionFactory","put","Error","cr","useEffect","key","App","isLoggedIn","identity","setIdentity","getIdentity","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9e7cd1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/power_by_iovlabs.0403ff12.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5e7b55e5.svg\";","export const backOfficeUrl = `https://72be6abcfb65.ngrok.io/issuer-back-office`\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport './index.css'\nimport { backOfficeUrl } from '../../adapters'\nimport poweredByIOV from '../vectors/power_by_iovlabs.svg'\nimport logo from '../vectors/logo.svg'\n\nconst Login = ({ login }) => {\n  const [username, setUser] = useState('')\n  const [password, setPass] = useState('')\n  const [authError, setAuthError] = useState('')\n\n  const auth = { username, password }\n\n  const handleChangeUser = e => setUser(e.target.value)\n  const handleChangePass = e => setPass(e.target.value)\n\n  const authenticate = () => axios.post(backOfficeUrl + '/auth', {}, { auth })\n    .then(res => {\n      if (res.status === 200) login(auth)\n      else setAuthError(res.data.toString())\n    })\n    .catch(error => setAuthError(error.message))\n\n  return (\n    <div className='login'>\n      <div className='login-container'>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <p className='login-header'>Sign in to</p>\n              <h3 className='login-title'>RIF Credential manager</h3>\n              <form className='form' onSubmit={e => { e.preventDefault(); authenticate() }}>\n                <div className=\"form-group row\">\n                  <label htmlFor=\"inputEmail3\" className=\"col-sm-3 col-form-label login-label\">Username</label>\n                  <div className=\"col-sm-6\">\n                    <input type=\"text\" className=\"form-control login-control\" id=\"inputEmail3\" onChange={handleChangeUser} value={username} />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label htmlFor=\"inputPassword3\" className=\"col-sm-3 col-form-label login-label\">Password</label>\n                  <div className=\"col-sm-6\">\n                    <input type=\"password\" className=\"form-control login-control\" id=\"inputPassword3\" onChange={handleChangePass} value={password} />\n                  </div>\n                </div>\n                {\n                  authError && <div className='alert alert-warning'>\n                    {authError}\n                  </div>\n                }\n                <div className=\"form-group row\">\n                  <div className=\"col-sm-12\">\n                    <div className=\"form-check\">\n                      <input className=\"form-check-input login-check\" type=\"checkbox\" id=\"gridCheck1\" disabled />\n                      <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                        Remember me\n                      </label>\n                    </div>\n                  </div>\n                </div>\n                <button type='submit' className='btn btn-login'>Login</button>\n              </form>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <img src={poweredByIOV} className=\"login-pbi-vector\" alt=\"powered-by-iov\" />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <img src={logo} className=\"login-rif-vector\" alt=\"rif\" />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <p className=\"login-cr\">Copyright Â© 2020 IOV Labs. All rights reserved.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","export const transformDID = did => did.slice(0, 30) + '...' + did.slice(-4)","import React, { useState } from 'react'\nimport { transformDID } from '../../transformers'\n\nconst Row = ({ request, grantCredential, denyCredential }) => {\n  const [showDetails, setShowDetails] = useState(false)\n\n  return (\n    <>\n      <tr>\n        <td>{request.id}</td>\n        <td>{transformDID(request.from)}</td>\n        <td>{request.name}</td>\n        <td>{request.isValid ? 'valid' : 'invalid'}</td>\n        <td>{request.status}</td>\n        <td><button className=\"btn btn-link\" onClick={() => grantCredential(request.id)}>Grant</button></td>\n        <td><button className=\"btn btn-link\" onClick={() => denyCredential(request.id)}>Deny</button></td>\n        <td><button className=\"btn btn-link\" onClick={() => setShowDetails(!showDetails)}>{showDetails ? 'show less' : 'show more'}</button></td>\n      </tr>\n      {\n        showDetails && request.sdr.map(claim => (\n          <tr className='row-more-info'><td colSpan={9}>{claim.claimType}: {claim.claimValue}</td></tr>\n        ))\n      }\n    </>\n  )\n}\n\nexport default Row\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport './index.css'\nimport { backOfficeUrl } from '../../adapters'\nimport Row from './Row'\n\nfunction Requests({ auth }) {\n  const [error, setError] = useState('')\n  const [requests, setRequests] = useState([])\n\n  console.log(requests)\n\n  const handleCatch = e => setError(e.message)\n\n  const getMessagesSince = useCallback(\n    () => axios.get(`${backOfficeUrl}/requests`, { auth }).then(res => res.data).then(setRequests).catch(handleCatch),\n    [auth]\n  )\n\n  const putActionFactory = (status) => (id) => axios.put(`${backOfficeUrl}/request/${id}/status`, { status }, { auth })\n    .then(res => {\n      if (res.status !== 200) throw new Error(res.data)\n      return res.data\n    })\n    .then(cr => setRequests(requests.map(request => request.id === cr.id ? cr : request)))\n    .catch(handleCatch)\n\n  const grantCredential = putActionFactory('granted')\n  const denyCredential = putActionFactory('denied')\n\n  useEffect(() => {\n    getMessagesSince()\n  }, [getMessagesSince])\n\n  return (\n    <div className=\"container\">\n      <h3 className=\"reply-title\">Credential requests</h3>\n      {error && <div className=\"alert alert-danger\"><p> Error: {error}</p></div>}\n\n      <table className=\"table reply-table\">\n        <thead className=\"reply-table-header\">\n          <tr>\n            <th>Id</th>\n            <th>From</th>\n            <th>Name</th>\n            <th>Valid</th>\n            <th>Status</th>\n            <th></th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {requests.map((request) => (\n            <Row key={request.id} request={request} grantCredential={grantCredential} denyCredential={denyCredential} />\n          ))}\n        </tbody>\n      </table>\n      <button onClick={getMessagesSince} className=\"btn btn-link\">reload</button>\n    </div>\n  );\n}\n\nexport default Requests;\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport './index.css'\nimport Login from '../Login'\nimport Requests from '../Requests'\nimport { backOfficeUrl } from '../../adapters'\nimport { transformDID } from '../../transformers'\n\nfunction App() {\n  const [{ isLoggedIn, auth }, setUser] = useState({ isLoggedIn: false, auth: { username: '', password: '' } })\n  const [identity, setIdentity] = useState('')\n\n  const getIdentity = useCallback(\n    () => axios.get(backOfficeUrl + '/identity', { auth }).then(res => res.data).then(setIdentity),\n    [auth]\n  )\n\n  useEffect(() => {\n    if (isLoggedIn) getIdentity()\n  }, [isLoggedIn, getIdentity])\n\n  const login = (auth) => {\n    setUser({ isLoggedIn: true, auth })\n  }\n\n  if (!isLoggedIn) {\n    return <Login login={login} />\n  }\n\n  return (\n    <>\n      <nav className=\"navbar navbar-light navbar app-navbar\">\n        <span className=\"navbar-brand\">\n          RIF Identity\n        </span>\n        <span className=\"navbar-brand\">\n          <div className=\"did-container\">\n            {transformDID(identity)}\n          </div>\n        </span>\n      </nav>\n      <div className=\"container\">\n        <div className=\"row menu\">\n          <div className=\"col\"><label className=\"menu-item menu-item-disabled\">Home</label></div>\n          <div className=\"col\"><label className=\"menu-item menu-item-disabled\">Issue credentials</label></div>\n          <div className=\"col\"><label className=\"menu-item menu-item-selected\">Grant credentials</label></div>\n          <div className=\"col\"><label className=\"menu-item menu-item-disabled\">History</label></div>\n          <div className=\"col\"><label className=\"menu-item menu-item-disabled\">Settings</label></div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Requests auth={auth} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}